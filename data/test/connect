#!/bin/bash

###################################################
## REFERENCES
# https://stackoverflow.com/questions/18223665/postgresql-query-from-bash-script-as-database-user-postgres
# http://www.manniwood.com/postgresql_and_bash_stuff/index.html
#
#
## TODO
#  FIX  Filenames and Paths not to be hard coded
#  NEED to add a options, Catch all and Usage
#  NEED a switch to default to TEST MODE
#        Live mode needs more work
#  NEED to add a LOG routine
###################################################
# First Bash Shell script to execute psql command
###################################################
set -e  #Exit imediatly (not usable when in trap or testing mode)
set -u

version=0.04

#Set the value of variable
dbname="testdirlist"
host="localhost"
port="5432"

d=$(date +%Y-%m-%d)
t="$(date +"%T")"
timestamp="$d $t"

SOURCE="${BASH_SOURCE[0]}"
echo "SOURCE is '$SOURCE  -'  Version $version"


#Process Directorylist
echo "Creating input file"

# Run directory listing
./directorylisting.sh



#exit 0

#Execute few psql commands:


#env -i bash --norc   # clean up environment
set +o history

read -sp 'Enter Database password: ' PASS; echo

# DO NOT EXPORT PASS to environment
#printf '%s\n' "$PASS"

# Set these environmental variables to override them,
# but they have safe defaults.
export PGHOST=${PGHOST-localhost}
# ToDo PORT may not be the default port assigned 5432
#export PGDATABASE=${PGDATABASE-"$dbname"}
export PGPORT=${PGPORT-$port}
export PGUSER=${PGUSER-$USER}
export PGPASSWORD=${PGPASSWORD-"$PASS"}


#Note: you can also add -h hostname -U username in the below commands.
#echo ""psql -h $host -d $dbname -U $user -c "CREATE TABLE public.tbl_students(rno integer, name character varying)"""

echo "psql -c createdb $dbname"
echo "CONNECTING to $PGUSER at $PGHOST:$PGPORT"

# below id passing Password
psql -U $PGUSER password=$PASS -f "../schema/private/src/db/$dbname.sql"

echo "database $dbname created"
# below is using Environament variables
#psql -X -f "./sql/Create_Db_filemedb.sql"

export PGDATABASE=${PGDATABASE-$dbname}
# Create table
psql -d $dbname -f "../schema/private/src/db/tbl/tbl_filelist.sql";
# Insert data
psql -d $dbname -f "../schema/private/src/db/tbl/insert_tbl_filelist.sql";


# Read
echo "List Big files (over 100kb)"
psql -d $dbname -c "SELECT t.file, t.ext, t.size, t.path
                    FROM public.tbl_filelist_temp t
                    WHERE size > 100000
                    ORDER BY size DESC";

TableCount=$(psql -d $dbname -t -c "SELECT COUNT(1) FROM tbl_filelist_temp");

#Print the value of variable
echo "Total table records count....:"$TableCount;

########################  Clear Environment  ########################
#
unset PASS  #drop password
unset PGPASSWORD
unset PGDATABASE
